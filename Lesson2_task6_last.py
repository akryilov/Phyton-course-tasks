# 6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре.
# В кортеже должно быть два элемента — номер товара и словарь с параметрами
# (характеристиками товара: название, цена, количество, единица измерения).
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.

product_num = int(input('enter the number of products: '))  # Указание кол-ва продуктов
attr_num = int(input('enter the number of attributes: '))  # Указание числа параметров
str_list = input(f'Enter the names of {attr_num} attributes using space: ').split()  # Ввод параметров через пробел
a = 0
i = 0
dict_1 = {}
dict_2 = {}
list_1 = []
list_2 = []
list_3 = []
while a <= (product_num - 1):  # Цикл ввода данных словаря по номеру продукта
    while i <= (attr_num - 1):  # Цикл ввода данных по каждому из параметров
        print(f'Enter value of the {str_list[i]} for product #{a+1}: ')  # ВВод значения параметра
        v = input()
        dict_1[str_list[i]] = v
        dict_2 = dict_1.copy()
        i += 1
    list_3 += dict_2.items()
    list_1 += (a+1, dict_2)  # Обновление листа с учетом номера продука и введенных параметров
    list_2 += (dict_2,)  # Обновление листа с учетом номера продука и введенных параметров
    a += 1
    i = 0
print(f'Created list is: {list_2}')  # Вывод информации о созданном листе

# Создание словаря с аналитикой о данных

y = []
x = {}
w = []
p = {}
while i <= (product_num - 1):
    x = list_2[i]  # Получили словарь по индексу i (кол-ву продуктов)
    y.insert(i, list(x.values()))  # Перенесли значения словаря в список
    w = list(zip(*y))  # Транспонируем матрицу значений словаря
    p = dict(zip(str_list, w))  # Создаем словарь с ключами из str_list b значениями из w
    i += 1
print(f'Dictionary is: {p}')  # Результат создания словаря
